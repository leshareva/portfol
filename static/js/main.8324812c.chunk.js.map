{"version":3,"sources":["serviceWorker.ts","components/SelectorTheme/actions.ts","components/UI.tsx","components/CardDetailsComponent/CardDetailsComponent.tsx","Api/Helpers.ts","Api/index.ts","config.ts","actions.ts","components/ThemeDetailsComponent/actions.ts","components/VideoInstruction.tsx","components/components.tsx","components/FeedbackView/FeedbackView.tsx","components/ThemeDetailsComponent/ThemeDetailsComponent.tsx","components/Modal/actions.ts","components/Modal/Modal.tsx","components/SelectorTheme/ThemeSelector.tsx","components/CardDetailsComponent/actions.ts","components/ThemeDetailsComponent/UploadWorkComponent.tsx","components/ProtfolioComponent.tsx","App.tsx","reducers.ts","components/ThemeDetailsComponent/reducer.ts","components/Modal/reducer.ts","store.ts","index.tsx","images/plus.svg","images/hot.svg","images/cold.svg","images/wait.svg","images/corner.svg","images/close.svg"],"names":["Boolean","window","location","hostname","match","previewRenderSuccess","cards","type","cardSelectedSuccess","card","init","rubric","works","work_id","dispatch","a","convertToCards","active_card","i","work","find","el","key","theme","themes","map","filter","theme_id","exercise","sort","b","Date","date_created","getTime","theme_works","empty_cards_counter","length","step","isMobile","push","buttonStyle","Button","styled","button","Row","div","getWidthString","span","Column","xs","sm","md","lg","Title","h1","level","getLevelStyle","Text","h2","SmallText","Link","color","Container","RightColumnWrapper","CardDetailsComponent","this","props","leftColumn","rightColumn","React","Component","Time","date","d","setHours","getHours","toTimeString","substring","formatToHumanTime","human_date","iso","month","getMonth","getDate","getFullYear","toLocaleTimeString","replace","parseDate","day","0","1","2","3","4","5","6","getDay","time","instant","url","params","fetch","Api","cancelExercise","callApi","fetchWorks","saveFeedback","addMemberToEvent","then","res","fetchEvents","Object","assign","include_themes","Event","enterToEvent","selectExercise","fetchGoods","fetchHistoryData","maxRecords","fetchExercises","fetchAchieves","fetchRubricsData","fetchUserData","vk_id","include","skills","levels","fetchUserExercises","saveWorks","data","FormData","files","x","append","exercise_id","user_id","axios","post","IMAGE_SERVER_URL","images","path","imgs","body","method","headers","JSON","stringify","obj","str","encodeURIComponent","serialize","json","name","event_id","title","desc","link","cover","end_date","members_limit","rubric_id","count_members","members","events_type_id","criterias","feedback_video_id","market_items","figma_file_id","isGoing","now","end","nowTime","getMinutes","dateTime","endTime","keys","userFetchedSuccess","user","rubricFetchedSuccess","userWorksFetchedSuccess","exerciseStarted","fetchData","theme_exercise","forEach","active_exercise_id","by_exercise_ids","by_user_ids","by_rubric_ids","onClickDropZone","event","target","doneExercise","finished_time","toISOString","exerciseFinished","videoView","videoId","opts","width","playerVars","TimerView","startTime","finishedTime","TimerTitle","active","TimerZone","actived","formatValue","value","initialTime","moment","valueOf","startImmediately","timerState","Fragment","Hours","Minutes","Seconds","Bubble","FeebackView","string","feedbacker","votes","about","charAt","toLowerCase","slice","vote","label","amount","style","WorkContainer","height","Wrapper","EmptyWorkContainer","PlusIcon","CardTitle","CardText","CardButton","ButtonZone","ImageZone","UploadButton","WaitIcon","img","ThemeDetailsSelector","activeCard","onStartButtonClick","isSending","imageView","image","src","alt","feedbackView","text_rate","HotIcon","ColdIcon","waitIcon","items","started_time","timerView","onClick","onEditClick","content","disabled","instruction_video_id","MainView","connect","state","app","isLoading","themeSelector","activeExercise","upload","catch","err","closeModalAction","BackDrop","ModalBody","CloseButton","Modal","show","closeIcon","onClose","marginTop","modal","ThemeGroup","Card","selected","CornerIcon","WorkCard","icon","EmptyCard","ArrowComponent","LeftArrow","RightArrow","ThemeSelector","initialized","ArrowLeft","ArrowRight","bunch","check","backgroundImage","onElementClick","worksView","arrowLeft","arrowRight","innerWrapperStyle","display","clickWhenDrag","hideSingleArrow","alignCenter","wheel","scrollToSelected","scrollBy","ThemeDetailsComponent","selectedTheme","DropZone","Input","input","UploadWorkComponent","preCancel","onExitButtonClicked","maxWidth","onChange","e","size","setState","PortfolioComponent","renderCards","indexOf","StyledCard","caption","background","backgroundPosition","backgroundSize","backgroundRepeat","templates","ExerciseWrapper","Header","Logo","RubricDescription","AppComponent","auth","href","ProtfolioComponent","bridge","send","subscribe","detail","id","allReducers","combineReducers","activeTab","autoStars","action","console","log","showModal","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","exact","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.8324812c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { iTheme } from './../../Api/interfaces';\nimport { openModalSuccess } from '../CardDetailsComponent/actions';\nimport { iRubric, iWork } from '../../Api/interfaces';\nimport { isMobile } from 'react-device-detect';\n\n\nconst themeSelectorInitSuccess = () => {\n    return {\n        type: 'THEME_SELECTOR/INIT_SUCCESS'\n    }\n}\n\nconst previewRenderSuccess = (cards: any[]) => {\n    return {\n        type: 'THEME_SELECTOR/PREVIE_RENDER_SUCCESS',\n        cards\n    }\n}\n\nexport const cardSelectedSuccess = (card: any) => {\n    return {\n        type: 'THEME_SELECTOR/CARD_SELECTED_SUCCESS',\n        card\n    }\n}\n\nexport const init = (rubric: iRubric, works: iWork[], work_id?: string) => {\n    return async (dispatch: any) => {\n        const cards = convertToCards(dispatch, rubric, works, work_id)\n        dispatch(previewRenderSuccess(cards))\n    }\n}\n\nexport interface iCard {\n    key: string\n    theme: iTheme\n    work?: iWork\n}\n\nconst convertToCards = (dispatch: any, rubric: iRubric, works: iWork[], work_id?: string) => {\n    let cards: Array<Array<iCard>> = []\n    let i = 0;\n    let active_card \n    if(work_id) {\n        let work = works.find(el=>el.work_id===work_id)\n        if(work) {\n            active_card = {\n                key: work.work_id,\n                theme: work.theme,\n                work: work\n            }\n        } \n    }\n    \n\n    rubric.themes = rubric.themes.map(theme => {\n        theme.works = works.filter(work => work.theme.theme_id === theme.theme_id || work.exercise?.theme_id === theme.theme_id)\n        .sort((a,b)=>{\n            return new Date(a.date_created).getTime() - new Date(b.date_created).getTime()\n        })\n        let theme_works: iCard[] = theme.works.map(work => {\n            let card = {\n                key: work.work_id,\n                theme: theme,\n                work: work\n            }\n\n            return card\n        }) || []\n\n        let empty_cards_counter = 3\n        if (theme_works.length === 0) empty_cards_counter = 3\n        if (theme_works.length === 1) empty_cards_counter = 2\n        if (theme_works.length >= 2) empty_cards_counter = 1\n\n\n        for (let step = 0; step < empty_cards_counter; step++) {\n            i = i + 1\n            let card = {\n                key: \"\" + i,\n                theme: theme\n            }\n\n            if (!active_card && !isMobile && i===1) {\n                active_card = card\n            }\n\n            theme_works.push(card)\n        }\n\n        cards.push(theme_works)\n\n        return theme\n    })\n    \n    // if (!active_card && !isMobile) {\n    //     let card = cards.find(el => el[el.length - 1].key === \"1\")\n    //     console.log(card)\n    //     active_card = card ? card.find(el => el.key === \"1\") : null\n    // }\n\n    if (active_card) dispatch(cardSelectedSuccess(active_card))\n\n    dispatch(themeSelectorInitSuccess())\n    return cards\n}\n\nexport const onElementClick = (card: any) => {\n    return (dispatch: any) => {\n        dispatch(cardSelectedSuccess(card))\n        if (isMobile) dispatch(openModalSuccess())\n    }\n}\n\n","import styled from 'styled-components'\n\n\nexport const buttonStyle = `border: none;\nbackground: #015EFF;\nborder-radius: 4.2px;\nfont-family: Roboto;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 20px;\nline-height: 120%;\ncolor: #FFFFFF;\npadding: 7px 12px;\ncursor: pointer;\n\n&:disabled {\n    opacity: 0.2;\n}\n`\n\n\nexport const Button = styled.button`\n${buttonStyle}\n`\n\n//layout\nexport const Row = styled.div`\n    &::after {\n        content: \"\";\n        clear: both;\n        display: table;\n    }\n`;\n\n\nexport interface iColumn {\n    xs?: string\n    sm?: string\n    md?: string\n    lg?: string\n}\n\nfunction getWidthString(span: string) {\n\n    let width = +span / 12 * 100;\n    return `width: ${width}%;`;\n}\n\nexport const Column = styled.div<iColumn>`\nfloat: left;\n${ ({ xs }) => (xs ? getWidthString(xs) : \"width: 100%\")};\n\n@media only screen and (min-width: 768px) {\n    ${ ({ sm }) => sm && getWidthString(sm)};\n}\n\n@media only screen and (min-width: 992px) {\n    ${ ({ md }) => md && getWidthString(md)};\n}\n\n@media only screen and (min-width: 1200px) {\n    ${ ({ lg }) => lg && getWidthString(lg)};\n}\n`\n\n\n\n\n//Typography\n\ninterface iTitle {\n    level: \"1\" | \"2\" | \"3\"\n}\n\nfunction getLevelStyle(level: string) {\n    if (level === \"1\") {\n        return `\n        font-weight: 900;\n        font-size: 56px;\n        line-height: 68px;\n        `\n    }\n\n    if (level === \"2\") {\n        return `\n        font-weight: 800;\n        font-size: 32px;\n        line-height: 110%;\n        `\n    }\n\n    if (level === \"3\") {\n        return `\n        font-weight: bold;\n        font-size: 24px;\n        line-height: 29px;\n`\n    }\n};\n\nexport const Title = styled.h1<iTitle>`\nfont-family: Montserrat;\nfont-style: normal;\n${({ level }) => getLevelStyle(level)}\n`\n\nexport const Header = styled.h2`\nfont-family: Montserrat;\nfont-style: normal;\nfont-weight: 800;\nfont-size: 32px;\nline-height: 110 %;\nfont-feature-settings: 'tnum' on, 'lnum' on;\ncolor: #000000;\n`\n\nexport const Text = styled.div`\nfont-family: Roboto;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 20px;\nline-height: 120 %;\nfont-feature-settings: 'tnum' on, 'lnum' on;\n`\n\nexport const SmallText = styled.div`\nfont-family: Roboto;\nfont-style: normal;\nfont-weight: normal;\nfont-size: 16px;\nline-height: 120%;\nfont-feature-settings: 'tnum' on, 'lnum' on;\n`\n\ninterface iLinkProps {\n    color?: 'destroy',\n    type?: 'dashed'\n}\n\nexport const Link = styled.a<iLinkProps>`\ncolor: ${({ color }) => color && color === 'destroy' ? '#FF1F1F' : '#092DEA'};\ncursor: pointer;\n${({type})=>type&&type==='dashed' ? 'border-bottom: 1px dashed #FF1F1F' : null} \n`\n","import React from 'react'\nimport { Row, Column } from '../UI'\nimport styled from 'styled-components'\n\n\nconst Container = styled.div`\nwidth: 100%;\n\nmargin-bottom: 20px;\nbackground: #FFFFFF;\nz-index: 1000;\n\n@media only screen and (min-width: 768px) {\n    border-radius: 15px;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.08);  \n    padding: 20px 20px 30px 20px;\n    margin-left: -20px;\n}\n`\n\ninterface iProps {\n    leftColumn: any\n    rightColumn: any\n}\n\nconst RightColumnWrapper = styled.div`\npadding: 20px 0 0 0;\n@media only screen and (min-width: 992px) {\n    padding: 0 0 0 40px; \n}\n`\n\nexport default class CardDetailsComponent extends React.Component<iProps, any> {\n    render() {\n\n        let { leftColumn, rightColumn } = this.props\n\n        return <Container>\n            <Row>\n                <Column md=\"6\" lg=\"6\">\n                    {leftColumn}\n                </Column>\n                <Column md=\"6\" lg=\"6\">\n                    <RightColumnWrapper>\n                        {rightColumn}\n                    </RightColumnWrapper>\n                </Column>\n            </Row>\n        </Container>\n    }\n}\n\n","export const parseQueryString = (string: string) => {\n    return string.slice(1).split('&')\n        .map((queryParam) => {\n            let kvp = queryParam.split('=');\n            return { key: kvp[0], value: kvp[1] }\n        })\n        .reduce((query: any, kvp: any) => {\n            query[kvp.key] = kvp.value;\n            return query\n        }, {})\n};\n\nexport const parseDate = (iso: string) => {\n    var arr = [\n        'января',\n        'февраля',\n        'марта',\n        'апреля',\n        'мая',\n        'июня',\n        'июля',\n        'августа',\n        'сентября',\n        'октября',\n        'ноября',\n        'декабря',\n    ];\n    let date = new Date(iso)\n    let month = arr[+date.getMonth()];\n    const result = `${date.getDate()} ${month} ${date.getFullYear()}, ${date.toLocaleTimeString().replace(/(.*:.*?):\\d+/gs, '$1')}`\n    return result\n}\n\nexport function Time(date: string) {\n    var d = new Date(date);\n    d.setHours(d.getHours());\n    let res = d.toTimeString().substring(0, 5);\n    return res;\n\n}\n\n\nexport function formatToHumanTime(date: string) {\n    const days: any = {\n        0: 'вс',\n        1: 'пн',\n        2: 'вт',\n        3: 'ср',\n        4: 'чт',\n        5: 'пт',\n        6: 'сб'\n    }\n\n    let key = parseDate(date).replace(/^(\\d+\\s.+?)\\s.+/gs, '$1');\n\n    return {\n        human_date: key,\n        day: days[new Date(date).getDay()],\n        time: Time(date)\n    }\n}\n\n\nexport function declOfNum(number: number, titles: any) {  \n    let cases = [2, 0, 1, 1, 1, 2];  \n    return titles[ (number%100>4 && number%100<20)? 2 : cases[(number%10<5)?number%10:5] ];  \n}\n","import { API_URL, IMAGE_SERVER_URL } from '../config';\nimport { iApi, iExercisesListOption, iGood, iEvent, iAttachment, iTheme, iFeedbackOptions, iCancelExerciseOpt } from './interfaces';\nimport { formatToHumanTime } from './Helpers';\nimport axios from 'axios';\nconst instant = async (url: string, params: any) => fetch(`${API_URL}${url}`, params)\n\n\n\nconst Api: iApi = {\n    cancelExercise: (params: iCancelExerciseOpt ) => {\n        return Api.callApi('/exercises/cancel', params, 'post')\n    },\n    fetchWorks: async (params?: { by_rubric_ids?: string, by_event_ids?: string, group_by_themes?: boolean, without_feedback_only?: boolean, by_user_ids?: string, maxRecords?: number }) => {\n        return Api.callApi('/works', params, 'get')\n    },\n    saveFeedback: async (params: iFeedbackOptions) => {\n        return Api.callApi('/works/vote', params, 'post')\n    },\n    addMemberToEvent: (params: { event_id: string, user_id: string }) => {\n        return Api.callApi('/events/member/add', params, 'post').then(res => {\n            return res\n        })\n    },\n    fetchEvents: async (params?: { by_event_ids?: string, only_upcoming?: boolean, only_past?: boolean, max_records?: number }) => {\n        return Api.callApi('/events', Object.assign({ include_themes: true }, params ? params : {}), 'get').then(res => res.map((el: any) => new Event(el)))\n    },\n\n    enterToEvent: (params: { user_id: string, event_id: string, theme_id?: string }) => {\n        return Api.callApi('/events/enter', params, 'post').then(res => new Event(res))\n    },\n\n    selectExercise: (params: { theme_id: string, user_id: string }) => {\n        return Api.callApi('/exercises/select', params, 'post')\n    },\n\n    fetchGoods: async (params?: { by_good_ids?: string }): Promise<iGood[]> => Api.callApi('/goods', params, 'get'),\n\n    fetchHistoryData: async (): Promise<any[]> => Api.callApi('/accruals', { maxRecords: 10 }, 'get'),\n    fetchExercises: async (params?: iExercisesListOption) => Api.callApi('/exercises', params, 'get'),\n    fetchAchieves: () => Api.callApi('/achieves', {}, 'get'),\n\n    fetchRubricsData: async (params?: { by_rubric_ids?: string, include_events?: boolean, include_themes?: boolean }): Promise<any[]> => Api.callApi('/rubrics', params, 'get'),\n\n    fetchUserData: (vk_id: number) => {\n        return Api.callApi('/users/init', { vk_id: vk_id, include: { skills: true, levels: true } }, 'post')\n    },\n\n    fetchUserExercises: (params: {user_id: string, by_exercise_ids?: string}) => {\n        return Api.callApi('/users/exercises', params, 'get')\n    },\n\n    saveWorks: async (params: { files: any[], exercise_id: string, user_id: string }) => {\n        const data = new FormData();\n        const files = params.files\n        for (var x = 0; x < files.length; x++) {\n            data.append('file', files[x])\n        }\n\n\n        data.append('exercise_id', params.exercise_id)\n        data.append('user_id', params.user_id)\n\n\n        return axios.post(IMAGE_SERVER_URL+\"upload\", data, { // receive two parameter endpoint url ,form data \n        })\n            .then(res => { // then print response status\n                \n                let images = res.data.map(el=>{\n                    return {\n                        url: IMAGE_SERVER_URL + el.path\n                    }\n                })\n                return Api.callApi('/works', {\n                    exercise_id: params.exercise_id,\n                    user_id: params.user_id,\n                    imgs: images\n                }, 'post')\n            })\n        // let req = await fetch(``, opt)\n\n        \n    },\n\n    callApi: (path: string, body?: any, method?: 'get' | 'post') => {\n\n        if (!method) method = 'post';\n\n        const serialize = (obj: any) => {\n            var str = \"\";\n            for (var key in obj) {\n                if (str !== \"\") {\n                    str += \"&\";\n                }\n                str += key + \"=\" + encodeURIComponent(obj[key]);\n            }\n            return str\n        }\n\n        let url = path\n        let params = {\n            method: method,\n            headers: { 'Content-Type': 'application/json' },\n        }\n        if (method === 'post') {\n            Object.assign(params, { body: body ? JSON.stringify(body) : '', })\n        }\n\n        if (method === 'get') {\n            url = `${url}?${serialize(body)}`\n        }\n\n        return instant(url, params).then(res => res.json()).then((res: any) => {\n            if (res.name === 'Error') throw res\n            return res\n        })\n\n    },\n\n\n}\n\n\n\nexport class Event implements iEvent {\n    event_id: string\n    title?: string\n    desc?: string\n    date?: string\n    link?: string\n    cover?: iAttachment[]\n    end_date?: string\n    members_limit?: number\n    rubric_id?: string\n    count_members?: number\n    members?: string[]\n    events_type_id?: string\n    themes?: iTheme[]\n    criterias?: string[]\n    feedback_video_id?: string\n    human_date?: string\n    time?: string\n    market_items?: string[]\n    figma_file_id?: string\n    day?: string\n    [key: string]: any\n\n    constructor(data: any) {\n        this.event_id = data.event_id\n        let d = formatToHumanTime('' + data.date)\n        this['human_date'] = d.human_date\n        this['time'] = d.time\n        this['day'] = d.day\n        Object.keys(data).map((key: string) => this[key] = data[key])\n    }\n\n    isGoing = (): boolean => {\n\n        if (!this['date'] || !this['end_date']) return false\n        var now = new Date();\n        var d = new Date(this['date']);\n        let end = new Date(this['end_date'])\n        var nowTime = now.getHours() * 60 + now.getMinutes();\n        var dateTime = d.getHours() * 60 + d.getMinutes();\n        var endTime = end.getHours() * 60 + end.getMinutes();\n\n        // compare nowTime and dateTime\n        if (nowTime >= dateTime && nowTime < endTime) {\n            // ....\n            return true\n        }\n\n        return false\n    }\n}\n\nexport default Api","// export const API_URL = 'http://localhost:3000/v1'\nexport const API_URL = 'https://app.leandesign.pro/v1'\nexport const IMAGE_SERVER_URL = 'https://app.leandesign.pro/file-upload/'\nexport const Rubric_id = 'reccL1v8kLnZha8y3'\nexport const USER_ID = 225033495","import { Rubric_id } from './config';\nimport { iUser, iWork, iRubric, iExercise } from './Api/interfaces';\nimport Api from \"./Api\"\nimport bridge from '@vkontakte/vk-bridge';\n\nexport const userFetchedSuccess = (user: iUser) => {\n    return {\n        type: 'APP/USER_FETCHED_SUCCESS',\n        user\n    }\n}\n\nconst rubricFetchedSuccess = (rubric: iRubric) => {\n    return {\n        type: 'APP/RUBRIC_FETCHED_SUCCESS',\n        rubric\n    }\n}\n\nconst userWorksFetchedSuccess = (works: iWork[]) => {\n    return {\n        type: 'APP/WORKS_FETCHED_SUCCESS',\n        works\n    }\n}\n\nexport const exerciseStarted = (exercise: iExercise) => {\n    return {\n        type: 'APP/EXERCISE_STARTED',\n        exercise\n    }\n}\n\n\nexport const exerciseFinished = (work?: iWork) => {\n    return {\n        type: 'APP/EXERCISE_FINISHED',\n        work\n    }\n}\n\nconst userAuthSuccess = () => {\n    return {\n        type: 'APP/AUTH_SUCCESS',\n    }\n}\n\n\nexport const init = (type: 'web' | 'vk', vk_id?: number, rubric_id?: string) => {\n    return async (dispatch: any) => {\n\n        let rubric = await Api.fetchRubricsData({ by_rubric_ids: rubric_id ? rubric_id : Rubric_id, include_themes: true }).then(res => res[0])\n        dispatch(rubricFetchedSuccess(rubric))\n\n        if (type === 'vk') {\n            bridge.send('VKWebAppInit');\n            bridge.subscribe(async (e: any) => {\n                switch (e.detail.type) {\n                    case 'VKWebAppGetUserInfoResult':\n                        fetchData(dispatch, e.detail.data.id, rubric)\n                        dispatch(userAuthSuccess())\n                        break;\n                    case 'VKWebAppAccessTokenReceived':\n\n                        break;\n                    case 'VKWebAppViewRestore':\n                        break;\n                    case 'VKWebAppAllowNotificationsResult':\n                        break;\n                    default:\n                }\n            });\n\n\n            bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": 7563949, \"scope\": \"friends,status\" });\n            bridge.send('VKWebAppGetUserInfo', {});\n\n        }\n\n        if (type === 'web' && vk_id) {\n            fetchData(dispatch, vk_id, rubric)\n        }\n        dispatch(rubricFetchedSuccess(rubric))\n\n    }\n}\n\n\nconst fetchData = async (dispatch: any, vk_id: number, rubric: iRubric) => {\n\n    const user = await Api.fetchUserData(vk_id)\n    if (user.theme_exercise) {\n        let active_exercise_id\n        rubric.themes.forEach(theme => {\n            if (user.theme_exercise[theme.theme_id] && !active_exercise_id) active_exercise_id = user.theme_exercise[theme.theme_id]\n        })\n\n        if (active_exercise_id) {\n            let exercise = await Api.fetchUserExercises({ user_id: user.user_id, by_exercise_ids: active_exercise_id }).then(res => res[0])\n            dispatch(exerciseStarted(exercise))\n            dispatch(userFetchedSuccess(user))\n            return\n        }\n    }\n\n    let works = await Api.fetchWorks({ by_user_ids: user.user_id, by_rubric_ids: Rubric_id, maxRecords: 30 })\n    dispatch(userWorksFetchedSuccess(works))\n    dispatch(userFetchedSuccess(user))\n}","import { iCard } from './../SelectorTheme/actions';\nimport { userFetchedSuccess, exerciseFinished } from './../../actions';\nimport { init } from '../SelectorTheme/actions';\n\nimport { iUser, iRubric, iWork } from './../../Api/interfaces';\nimport Api from \"../../Api\"\nimport { iExercise } from \"../../Api/interfaces\"\nimport { exerciseStarted } from \"../../actions\"\n\nexport const onClickDropZone = (event: any, exercise_id: string, user: iUser, rubric: iRubric, works: iWork[], cards: iCard[][]) => {\n    return async (dispatch: any) => {\n        let work = await Api.saveWorks({ files: event.target.files, exercise_id: exercise_id, user_id: user.user_id })\n        doneExercise(dispatch, user, exercise_id, rubric, works, cards, work)\n    }\n}\n\nexport const sendingExerciseStarted = () => {\n    return {\n        type: 'UPLOAD/START_UPLOAD'\n    }\n}\n\nexport const sendingExerciseFinished = () => {\n    return {\n        type: 'UPLOAD/STOP_UPLOAD'\n    }\n}\n\n\n\n\n\nexport const onStartButtonClick = (params: { theme_id: string, user_id: string }) => {\n    return async (dispatch: any) => {\n        dispatch(sendingExerciseStarted())\n        await Api.selectExercise(params).then(exercise => {\n            dispatch(exerciseStarted(exercise))\n        }).catch(err=>{\n            dispatch(sendingExerciseFinished())    \n        })\n        dispatch(sendingExerciseFinished())\n    }\n}\n\nexport const onExitButtonClicked = (exercise: iExercise, user: iUser, rubric: iRubric, works: iWork[], cards: iCard[][]) => {\n    return async (dispatch: any) => {\n        await Api.cancelExercise({ exercise_id: exercise.exercise_id, user_id: user.user_id })\n        doneExercise(dispatch, user, exercise.exercise_id, rubric, works, cards)\n    }\n}\n\nconst doneExercise = (dispatch: any, user: iUser, exercise_id: string, rubric: iRubric, works: iWork[], cards: iCard[][], work?: iWork) => {\n    let theme_exercise = user['theme_exercise'] || {}\n\n    Object.keys(theme_exercise).map(theme_id => {\n        if (theme_exercise[theme_id] === exercise_id) {\n            delete theme_exercise[theme_id]\n        }\n        return theme_id\n    })\n\n    if (work) {\n        works = works.filter(el=>el.work_id!==work.work_id)\n        if(work.exercise) work.exercise.finished_time = new Date().toISOString()\n        works.push(work)\n    }\n    user.theme_exercise = theme_exercise\n\n    dispatch(userFetchedSuccess(user))\n    dispatch(init(rubric, works, work ? work.work_id : ''))\n    dispatch(exerciseFinished(work))\n\n\n}\n\nexport const onEditClick = (exercise: iExercise) => {\n    return (dispatch: any) => {\n        dispatch(exerciseStarted(exercise))\n    }\n}","import React from 'react'\nimport { Title } from './UI'\nimport YouTube from 'react-youtube';\n\n\nexport const videoView = (videoId?: string) => {\n\n    const opts = {\n        width: '100%',\n        playerVars: {\n          // https://developers.google.com/youtube/player_parameters\n        //   autoplay: 1,\n        },\n      };\n      \n\n    if(!videoId) return\n    return <>\n    <Title level=\"3\">Видео-инструкция</Title>\n    <YouTube videoId={videoId} opts={opts} />\n    </>\n}","import React from 'react'\nimport moment from 'moment-timezone'\nimport { Title, SmallText } from './UI'\nimport styled from 'styled-components'\n// import HotIcon from '../../images/hot.svg';\nimport Timer from 'react-compound-timer'\n\n// interface iFeebackViewProps {\n//     work: iWork\n// }\n\n\n// const FeedbackTitle = styled(Title)`\n// &::after {\n//     position: absolute;\n//     content: url(${HotIcon});\n//     bottom: -2em;\n//     left: 0%;\n\n// }\n// `\n\n// class FeebackView extends React.Component<iFeebackViewProps, any> {\n//     render() {\n\n//         let work: iWork = {\n//             exercise: {\n//                 title: 'Объявление'\n//             },\n//             feedbacker: {\n\n//             },\n//             text_rate: 'Горячо'\n//         }\n\n//         return <div>\n//             <FeedbackTitle level=\"2\">{work.exercise ? work.exercise.title : null}</FeedbackTitle>\n//             <SmallText>Проверил Лёша Рева</SmallText>\n//         </div>\n//     }\n// }\n\n\n\ninterface iTimerProps {\n    startTime: string\n    finishedTime?: string\n    caption?: string\n}\n\n\nexport class TimerView extends React.Component<iTimerProps, any> {\n\n\n    render() {\n\n        const TimerTitle = styled(Title) <{ active?: boolean }>`\n            color: ${({ active }) => active ? '#FF5C00' : '#000000'};\n        `\n\n        const TimerZone = styled.div`\n            order: 1;\n            max-width: 200px;\n        `\n\n        let initTime = (startTime: string, finishedTime?: string) => {\n            return (finishedTime ? moment(finishedTime).valueOf() : moment().valueOf()) - moment(startTime).valueOf()\n        }\n\n        let actived = this.props.finishedTime ? false : true\n\n        return <TimerZone>\n            <TimerTitle level=\"2\" active={actived}>\n                <Timer\n                    formatValue={(value) => `${(value < 10 ? `0${value}` : value)}`}\n                    initialTime={initTime(this.props.startTime, this.props.finishedTime)}\n                    startImmediately={actived}\n                >\n                    {({ timerState }) => (\n                        <React.Fragment>\n                            <div>\n                                <Timer.Hours />:<Timer.Minutes />:<Timer.Seconds />\n                            </div>\n                        </React.Fragment>\n                    )}\n                </Timer>\n            </TimerTitle>\n            <SmallText>Быстрее, чем 36% дизайнеров в Лине</SmallText>\n        </TimerZone>\n    }\n}\n\n","import React from 'react'\nimport { iUser } from '../../Api/interfaces'\nimport styled from 'styled-components'\nimport { SmallText, Text } from '../UI'\n\ninterface iFeebackViewProps {\n    feedbacker: iUser\n    votes: {\n        amount: number\n        criteria_id: string\n        title: string\n    }[]\n}\n\n\nconst Bubble = styled.div`\nposition: relative;\n    padding: 15px;\n    margin: 20px 0 3em;\n    text-align: left;\n    color: #000;\n    background: #e8e8e8;\n    -webkit-border-radius: 10px;\n    -moz-border-radius: 10px;\n    border-radius: 10px;\n    max-width: 300px;\n\n&:before {\n    content: \"\";\n    position: absolute;\n    top: -20px;\n    left: 20%;\n    width: 100px;\n    height: 20px;\n    margin: 0 0 0 -50px;\n    background: #e8e8e8;\n}\n\n&:after {\n    content: \"\";\n    position: absolute;\n    top: -20px;\n    left: 0;\n    width: 10%;\n    height: 20px;\n    background: #fff;\n    -webkit-border-bottom-right-radius: 15px;\n    -moz-border-radius-bottomright: 15px;\n    border-bottom-right-radius: 15px;\n}\n\n& > :first-child:before {\n    content: \"\";\n    position: absolute;\n    top: -20px;\n    right: 0;\n    width: 90%;\n    height: 20px;\n    background: #fff;\n    -webkit-border-bottom-left-radius: 15px;\n    -moz-border-radius-bottomleft: 15px;\n    border-bottom-left-radius: 15px;\n}\n\n`\n\nexport class FeebackView extends React.Component<iFeebackViewProps, any> {\n    render() {\n        const { feedbacker, votes } = this.props\n\n\n        function firstLetterLowerCase(string) {\n            return string.charAt(0).toLowerCase() + string.slice(1);\n          }\n\n\n        return <div>\n            {/* <FeedbackTitle level=\"2\">{work.exercise ? work.exercise.title : null}</FeedbackTitle> */}\n            <Bubble><div>\n                <Text>Оценил {feedbacker.name}{feedbacker.about ? `, ${firstLetterLowerCase(feedbacker.about)}` : ''}</Text><br />\n                {votes.map((vote, i) => {\n                    let label = vote.amount === 3 ? `✓ ${vote.title}` : `✗ ${vote.title}`\n                    return <SmallText key={i} style={{ color: vote.amount === 3 ? '#17A500' : '#E7A600' }}>{label}</SmallText>\n                })}\n            </div></Bubble>\n        </div>\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { iExercise, iUser, iWork, iRubric } from '../../Api/interfaces'\nimport { Text, Title, Button, SmallText, buttonStyle } from '../UI'\nimport CardDetailsComponent from '../CardDetailsComponent/CardDetailsComponent'\nimport { onStartButtonClick, onClickDropZone, onEditClick } from './actions'\nimport { videoView } from '../VideoInstruction'\nimport PlusIcon from '../../images/plus.svg'\nimport HotIcon from '../../images/hot.svg'\nimport ColdIcon from '../../images/cold.svg'\nimport waitIcon from '../../images/wait.svg'\nimport { TimerView } from '../components'\nimport { FeebackView } from '../FeedbackView/FeedbackView'\n\ninterface iProps {\n    user: iUser\n    activeCard: any\n    activeExercise: iExercise\n    onStartButtonClick(params: { theme_id: string, user_id: string }): void\n    isSending?: boolean\n    works: iWork[]\n    rubric: iRubric\n    onEditClick(exercise: iExercise): void\n}\n\ninterface iWorkContainerProps {\n    width?: number;\n    height?: number;\n}\n\nconst WorkContainer = styled.div<iWorkContainerProps>`\n  width: ${({ width }) => width ? width + 'px' : '100%'};\n  height: ${({ height }) => height ? height + 'px' : '400'};\n`;\n\n\nconst Wrapper = styled.div`\nmargin-top: 64px;\ndisplay: flex; \nflex-flow: wrap;\nalign-items: flex-end;\n`\n\nlet EmptyWorkContainer = styled(WorkContainer)`\nborder: 1px dashed #7F93F4;\nbox-sizing: border-box;\nwidth: 100%;\nheight: 400px;\nbackground: #F5F9FF; \n&::after {\n    content: '';\n    background-size: 70px 70px;\n    background-image: url(${PlusIcon});\n    background-repeat: no-repeat;\n    width: 70px;\n    height: 70px;\n    display: block;\n    position: relative;\n    right: -45%;\n    top: 40%;\n}\n`\n\nconst CardTitle = styled(Title)`\nmargin-bottom: 10px;\n`\nconst CardText = styled(Text)`\nmargin-bottom: 20px;\n`\n\nconst CardButton = styled(Button)`\nmargin-bottom: 50px;\n`\n\n\nconst TimerZone = styled.div`\norder: 1;\nmax-width: 150px;\n`\nconst ButtonZone = styled.div`\norder: 3;\n\n@media only screen and (min-width: 786px) {\n    order: 2;\n    margin-left: auto;\n    text-align: right;\n}\n`\n\nconst ImageZone = styled.div`\norder: 2;\nmargin: 14px 0px 10px 0px;\nwidth: 100%;\n@media only screen and (min-width: 786px) {\n    order: 3;\n}\n`\n\n// const LinkZone = styled.div`\n// order: 4;\n// width: 100%;\n// `\n\nconst UploadButton = styled(Button)`\n${buttonStyle}\nmargin-top: 4px;\ndisplay: block;\n`\n\n// const Input = styled.input`\n// outline:0;\n// opacity:0;\n// pointer-events:none;\n// user-select:none;\n// display: none;\n// `\n\nconst WaitIcon = styled.img`\n@media only screen and (max-width: 786px) {\n    display: block;\n}\n`\nclass ThemeDetailsSelector extends React.Component<iProps, any> {\n    render() {\n\n        const { activeCard, onStartButtonClick, user, isSending } = this.props\n\n        let work = activeCard.work\n        let theme = activeCard.theme\n\n        const imageView = () => {\n            let image = work ? work.images[0] : null\n            if (image && image['thumbnails']) {\n                image = image['thumbnails']['large'] ? image['thumbnails']['large'] : image\n            }\n            return image ? <img src={image['url']} width=\"100%\" alt='' /> : null\n        }\n\n        const timerView = (work) => {\n            if (!work.exercise || !work.exercise.started_time) return null\n            return <TimerZone>\n                <TimerView startTime={work.exercise && work.exercise.started_time ? work.exercise.started_time : ''} finishedTime={work.exercise.finished_time} />\n            </TimerZone>\n        }\n\n        const feedbackView = (work: iWork) => {\n            if (!work) return <EmptyWorkContainer />\n\n            const getIcon = (text_rate: string) => {\n                if (text_rate === 'Горячо') return HotIcon\n                return ColdIcon\n            }\n            return <>\n                <Title level=\"2\">{!work.text_rate ? <><WaitIcon src={waitIcon} style={{ width: '30px' }} /> Загружено на проверку</> : <><WaitIcon src={getIcon(work.text_rate)} style={{ width: '30px' }} /> {work.text_rate}</>}</Title>\n                <Text >Разборы по понедельникам</Text>\n                {work.votes ?\n                    work.votes.map((vote, i) => {\n                        return <FeebackView key={i} feedbacker={vote.feedbacker} votes={vote.items} />\n                    })\n                    : null\n                }\n\n                <Wrapper>\n                    {timerView(work)}\n                    {!work.text_rate ? <ButtonZone>\n                        <SmallText>Таймер изменится</SmallText>\n                        <UploadButton onClick={() => work.exercise ? this.props.onEditClick(work.exercise) : null}>\n                            <span>+ Загрузить другой макет</span>\n                        </UploadButton>\n                    </ButtonZone> : null}\n                    <ImageZone>\n                        {imageView()}\n                    </ImageZone>\n                    {/* <LinkZone><Text><Link type=\"dashed\" color=\"destroy\">Удалить</Link></Text></LinkZone> */}\n                </Wrapper>\n            </>\n        }\n\n\n        const exerciseView = () => {\n            if (!work || !work.exercise) return null\n            return <><Title level=\"3\">Задание</Title>\n                <CardText>{work.exercise.desc}</CardText></>\n        }\n        const MainView = () => {\n            let content = <>\n                <CardTitle level={activeCard.work ? \"3\" : \"2\"}>{activeCard.theme.title}</CardTitle>\n                <CardText>{activeCard.theme.desc}</CardText>\n                {exerciseView()}\n                {!work ? <CardButton onClick={() => onStartButtonClick({ theme_id: theme.theme_id, user_id: user.user_id })} disabled={isSending}>{isSending ? `Подбираем задание…` : `Начать выполнение`}</CardButton> : null}\n                {videoView(theme.instruction_video_id)}\n            </>\n            let leftColumn = <>{feedbackView(work)}</>\n            return <CardDetailsComponent rightColumn={content} leftColumn={leftColumn} />\n        }\n\n        return MainView()\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n\n    return {\n        user: state.app.user,\n        isLoading: state.themeSelector.isLoading,\n        themes: state.themeSelector.themes,\n        activeCard: state.themeSelector.activeCard,\n        rubric: state.app.rubric,\n        activeExercise: state.themeSelector.activeExercise,\n        works: state.app.works,\n        isSending: state.upload.isLoading\n    }\n}\n\nexport default connect(mapStateToProps, { onStartButtonClick, onClickDropZone, onEditClick })(ThemeDetailsSelector)","export const onClose = () => {\n    return (dispatch: any) => {\n        dispatch(closeModalAction())\n    }\n}\n\nexport const closeModalAction = () => {\n    return {\n        type: 'MODAL/CLOSE'\n    }\n}","import React from 'react';\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { onClose } from './actions'\nimport closeIcon from '../../images/close.svg'\n\ninterface iModal {\n    body: any\n    show?: boolean\n    onClose(): void\n}\n\nconst BackDrop = styled.div`\n    position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      padding: 50;\n      z-index: 5000;\n      background-color: rgba(0,0,0,0.3);\n      overflow: scroll;\n`\n\nconst ModalBody = styled.div`\nbackground-color: #fff;\nborder-radius: 5px;\nmax-width: 500px;\nmin-height: 300px;  \nmargin: 0 auto;\npadding: 20px 16px;\nz-index: 5001;\nmargin-top: 20vh;\n`\n\nconst CloseButton = styled.img`\nwidth: 16px;\ndisplay: block;\nmargin-left: auto;\n`\n\nclass Modal extends React.Component<iModal, any> {\n    render() {\n        // Render nothing if the \"show\" prop is false\n        if (!this.props.show) {\n            return null;\n        }\n\n        return (\n            <BackDrop >\n                <ModalBody >\n                    <CloseButton src={closeIcon} onClick={this.props.onClose} />\n                    <div style={{marginTop: '-16px'}}>{this.props.body}</div>\n                </ModalBody>\n            </BackDrop>\n        );\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        show: state.modal.show\n    }\n}\n\n\nexport default connect(mapStateToProps, { onClose })(Modal)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { iUser, iWork, iRubric } from '../../Api/interfaces'\nimport { init, onElementClick } from './actions'\nimport ThemeDetailsComponent from './../ThemeDetailsComponent/ThemeDetailsComponent'\nimport styled from 'styled-components'\nimport { SmallText } from '../UI'\nimport HotIcon from '../../images/hot.svg';\nimport PlusIcon from '../../images/plus.svg';\nimport WaitIcon from '../../images/wait.svg';\nimport ColdIcon from '../../images/cold.svg';\nimport CornerIcon from '../../images/corner.svg';\nimport ScrollMenu from 'react-horizontal-scrolling-menu';\nimport { isMobile } from 'react-device-detect'\nimport Modal from '../Modal/Modal'\n\n\n\ninterface iProps {\n    init(rubric: iRubric, works: iWork[], work_id?: string): void\n    onElementClick(card: any): void\n    rubric: iRubric\n    activeCard?: any\n    user: iUser\n    cards: Array<Array<any>>\n    works: iWork[]\n    filter?: any\n    initialized?: boolean\n}\n\n\n\n\nconst ThemeGroup = styled.div`\ndisplay: flex; \nheight: 80px;\nmargin-right: 40px;\n`\n\ninterface iCardProps {\n    selected?: boolean\n}\n\nconst Card = styled.div<iCardProps>`\ncursor: pointer;\nwidth: 70px;\nheight: 70px;\nbackground-repeat: no-repeat;\nmargin: 4px 8px 4px 0px;\nbackground-size: cover;\nposition: relative;\n${({ selected }) => {\n        if (selected) {\n            return `\n            @media only screen and (min-width: 768px) {\n                    &::before {\n                    position: absolute;\n                    content: url(${CornerIcon});\n                    bottom: -2em;\n                    left: 0%;\n                    z-index: 2;\n                }\n            }`\n        } else {\n            return ''\n        }\n    }}\n\n`\n\nconst WorkCard = styled(Card) <{ icon?: string }>`\n&::after {\n    content: ${({ icon }) => icon ? 'url(' + icon + ')' : ''};\n    bottom: -20px;\n    position: absolute;\n    left: 2px;\n    width: 20px;\n}\n`\n\nconst EmptyCard = styled(Card)`\nborder: 1px dashed rgba(0, 71, 255, 0.5);\nbox-sizing: border-box;\n&::after {\n    content: '';\n    background-size: 20px 20px;\n    background-image: url(${PlusIcon});\n    background-repeat: no-repeat;\n    width: 20px;\n    height: 20px;\n    display: block;\n    position: relative;\n    margin: auto;\n    top: 40%;\n}\n`\n\nconst ArrowComponent = styled.div`\nfont-size: 20px;\ncursor: pointer;\n`\n\nconst LeftArrow = styled(ArrowComponent)`\npadding: 10px;\nmargin-left: -40px;\n`\nconst RightArrow = styled(ArrowComponent)`\npadding-left: 10px;\n`\n\nclass ThemeSelector extends React.Component<iProps, any> {\n    componentDidMount() {\n        if(!this.props.initialized) {\n            this.props.init(this.props.rubric, this.props.works);\n        }\n    }\n    render() {\n        const { cards, activeCard } = this.props\n\n        if (!cards) return <div>Загрузка…</div>\n\n        const worksView = (bunch: any[]) => {\n            return bunch.map((card: any) => {\n                let check = activeCard && activeCard.key === card.key\n                if (card.work) {\n                    let work: iWork = card.work\n                    let image = card.work.images[0]\n                    if (card.work.images[0]['thumbnails']) {\n                        image = card.work.images[0]['thumbnails']['large'] ? card.work.images[0]['thumbnails']['large'] : card.work.images[0]\n                    }\n\n                    let icon = HotIcon\n\n                    if (!work.text_rate) icon = WaitIcon\n                    if (work.text_rate === 'Холодно' || work.text_rate === 'Тепло') icon = ColdIcon\n                    return <WorkCard icon={icon} selected={check} key={card.key} style={{ backgroundImage: `url(${image['url']})` }} onClick={() => this.props.onElementClick(card)} />\n                } else {\n                    return <EmptyCard selected={check} key={card.key} onClick={() => this.props.onElementClick(card)} />\n                }\n\n\n            })\n        }\n\n        // const emptyWork = (theme: iTheme) => <EmptyCard onClick={() => this.props.onElementClick(theme)}>+</EmptyCard>\n\n        const themesList = () => {\n            // if (activeExercise) return null\n            return cards.map(bunch => {\n                if (!bunch[0]) return <></>\n                return <div key={bunch[0].theme.theme_id}>\n                    <SmallText>{bunch[0].theme.title}</SmallText>\n                    <ThemeGroup >\n                        {worksView(bunch)}\n                    </ThemeGroup>\n                </div>\n            }) || []\n        }\n\n        const selectedTheme = () => {\n            if (!this.props.activeCard) return\n            return isMobile ? <Modal body={<ThemeDetailsComponent />} /> : <ThemeDetailsComponent />\n        }\n\n\n        const ArrowLeft = <LeftArrow>←</LeftArrow>;\n        const ArrowRight = <RightArrow>→</RightArrow>;\n\n        return <>\n                <ScrollMenu\n                    data={themesList()}\n                    arrowLeft={ArrowLeft}\n                    arrowRight={ArrowRight}\n                    innerWrapperStyle={{ display: 'flex', height: '120px' }}\n                    clickWhenDrag={false}\n                    hideSingleArrow={true}\n                    alignCenter={false}\n                    wheel={false}\n                    scrollToSelected={true}\n                    scrollBy={1}\n                />\n\n\n                {selectedTheme()}\n            </>\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        cards: state.themeSelector.cards,\n        activeCard: state.themeSelector.activeCard,\n        user: state.app.user,\n        works: state.app.works,\n        rubric: state.app.rubric,\n        initialized: state.themeSelector.initialized\n    }\n}\n\nexport default connect(mapStateToProps, {init, onElementClick})(ThemeSelector)","export const openModalSuccess = () => {\n    return {\n        type: 'THEME_SELECTOR/OPEN_MODAL_SUCCESS'\n    }\n}\nconst closeModalSuccess = () => {\n    return {\n        type: 'THEME_SELECTOR/CLOSE_MODAL_SUCCESS'\n    }\n}\n\nexport const onCloseModal = () => {\n    return (dispatch: any) => {\n        dispatch(closeModalSuccess())\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport { onClickDropZone, onExitButtonClicked } from './actions'\nimport { SmallText, Row, Column, Title, Text, Link, buttonStyle } from '../UI'\nimport CardDetailsComponent from '../CardDetailsComponent/CardDetailsComponent'\nimport { iExercise, iUser, iRubric, iWork } from '../../Api/interfaces'\nimport { videoView } from '../VideoInstruction'\nimport { TimerView } from '../components'\nimport { Spinner } from '@vkontakte/vkui'\n\n\ninterface iProps {\n    user: iUser\n    rubric: iRubric\n    exercise: iExercise\n    works: iWork[]\n    isLoading?: boolean\n    onClickDropZone(event: any, exercise_id: string, user: iUser, rubric: iRubric, works: iWork[], cards: any[]): void\n    onExitButtonClicked(exercise: iExercise, user: iUser, rubric: iRubric, works: iWork[], cards: any[]): void\n    cards: any[]\n}\n\nconst DropZone = styled.label`\ntransition:border 300ms ease;\ndisplay:block; \ncursor:pointer;\ntext-align:center\nbackground: #FFF8F5;\nborder: 1px dashed #FFAA7B;\nbox-sizing: border-box;\nwidth: 100%;\nheight: 400px;\nmargin-top: 20px;\nmargin-bottom: 10px;\n`\n\nconst Input = styled.input`\noutline:0;\nopacity:0;\npointer-events:none;\nuser-select:none;\ndisplay: none;\n`\n\nconst TimerZone = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: flex-end;\nmargin: 14px 0px;\n`\n\nconst UploadButton = styled.label`\n${buttonStyle}\nbackground: #FF5C00;\nmargin-top: 4px;\ndisplay: block;\n`\n\n\nclass UploadWorkComponent extends React.Component<iProps, any> {\n\n    state = {\n        preCancel: false\n    }\n\n    render() {\n        let { onClickDropZone, exercise, onExitButtonClicked, user, rubric, works, cards, isLoading } = this.props\n        let theme = exercise.theme\n\n        const leftColumn = (<>\n\n            <TimerZone>\n                <div style={{ maxWidth: '200px' }}>\n                    <TimerView startTime={exercise.started_time || ''} />\n                </div>\n                <div style={{ maxWidth: '250px' }}>\n                    <SmallText>16:9, JPEG или PNG, 1000px</SmallText>\n\n                    <UploadButton>\n                        <span>+ Загрузить макет</span>\n                        <Input type=\"file\" onChange={(e) => onClickDropZone(e, exercise.exercise_id, user, rubric, works, cards)} />\n                    </UploadButton>\n                </div>\n            </TimerZone>\n\n\n            <DropZone>\n                {isLoading ? <Spinner size=\"medium\" /> : null}\n                <Input type=\"file\" onChange={(e) => onClickDropZone(e, exercise.exercise_id, user, rubric, works, cards)} />\n            </DropZone>\n\n            <Row>\n                <Column md=\"5\" lg=\"5\"><SmallText><Link onClick={() => this.setState({ preCancel: true })}>Выйти из задания</Link><br />Таймер сбросится и задание изменится</SmallText></Column>\n                <Column md=\"7\" lg=\"7\">{this.state.preCancel ? <SmallText>Точно выйти?&nbsp;&nbsp;<Link onClick={() => onExitButtonClicked(exercise, user, rubric, works, cards)}>Выйти</Link>&nbsp;&nbsp;<Link onClick={() => this.setState({ preCancel: false })}>Остаться</Link></SmallText> : null}</Column>\n            </Row>\n        </>)\n\n        const rightColumn = (<>\n            <Title level=\"2\">{exercise.title || 'Задание'}</Title>\n            <Text>{exercise.desc}</Text>\n            {theme ? videoView(theme.instruction_video_id) : null}\n        </>)\n\n        return <CardDetailsComponent leftColumn={leftColumn} rightColumn={rightColumn} />\n    }\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        user: state.app.user,\n        rubric: state.app.rubric,\n        exercise: state.app.activeExercise,\n        works: state.app.works,\n        isLoading: state.upload.isLoading,\n        cards: state.themeSelector.cards\n    }\n}\n\nexport default connect(mapStateToProps, { onClickDropZone, onExitButtonClicked })(UploadWorkComponent)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { iWork } from '../Api/interfaces'\nimport { Card, CardGrid } from '@vkontakte/vkui'\nimport { Row, Column, Title, SmallText } from './UI'\nimport styled from 'styled-components'\n// import { CardGrid, Card } from '@vkontakte/vkui'\n\n\ninterface iProps {\n    works: iWork[]\n}\n\ntype iTemplatesType = 'horizontal' | 'small_vertical' | 'big_vertical'\n\nclass PortfolioComponent extends React.Component<iProps, any> {\n    render() {\n\n        const templates = (type: iTemplatesType, work: iWork) => {\n            let url = work.images[0]['url'];\n            let StyledCard = styled(Card)`\n                background: none;\n                border-radius: 0px;\n            `\n\n            let caption = <>\n                <Title level=\"3\">{work.exercise ? work.exercise.title : ''}</Title>\n                <SmallText>Тут будет оценка</SmallText>\n            </>\n            switch (type) {\n                case 'horizontal':\n                    return <StyledCard size=\"l\" key={work.work_id}>\n                        <img src={url} width=\"100%\" alt=\"\" />\n                        {caption}\n                    </StyledCard>\n                case 'small_vertical':\n                    return <StyledCard size=\"m\" key={work.work_id} style={{height: '550px'}}>\n                        <div style={{\n                            background: `url(${url})`,\n                            width: '100%',\n                            height: '500px',\n                            backgroundPosition: 'center',\n                            backgroundSize: 'cover',\n                            backgroundRepeat: 'no-repeat'\n                        }}></div>\n\n                        {caption}\n                    </StyledCard>\n                case 'big_vertical':\n                    return <StyledCard size=\"l\" key={work.work_id}>\n                        <Row>\n                            <Column md=\"8\" lg=\"8\">\n                                <img src={url} width=\"100%\" alt=\"\" />\n                            </Column>\n                            <Column md=\"4\" lg=\"4\">\n                                {caption}\n                            </Column>\n                        </Row>\n\n                    </StyledCard>\n                default:\n                    return <StyledCard size=\"l\" key={work.work_id}>\n                        <img src={url} width=\"100%\" alt=\"\" />\n                    </StyledCard>\n            }\n        }\n\n        // const sortWorks = (works: iWork[]) => {\n        //     works = works.filter(el => el.images[0])\n\n        //     function chunkArray(myArray, chunk_size) {\n        //         var index = 0;\n        //         var arrayLength = myArray.length;\n        //         var tempArray: [][] = [];\n\n        //         for (index = 0; index < arrayLength; index += chunk_size) {\n        //             let myChunk = myArray.slice(index, index + chunk_size);\n        //             // Do something if you want with the group\n        //             tempArray.push(myChunk);\n        //         }\n\n        //         return tempArray;\n        //     }\n\n        //     let smalls: any[] = works.filter(work => {\n        //         let img = work.images[0]\n        //         if (img.width < img.height) return true\n        //     })\n\n        //     smalls = chunkArray(smalls, 2)\n\n        //     let larges = works.filter(work => {\n        //         let img = work.images[0]\n        //         if (img.width >= img.height) return true\n        //     }).map(el => {\n        //         el['size'] = \"l\"\n        //         return el\n        //     })\n\n\n        //     return larges\n        // }\n\n        // let bunches = sortWorks(this.props.works)\n\n        // let renderCards = (bunch: iWork[]) => {\n        //     return bunch.map((el: any) => <Card key={el.work_id} size={el.size ? el.size : 'm'} >\n        //         <img src={el.images[0]['url']} alt=\"\" />\n        //     </Card>)\n        // }\n\n        // return bunches.map((bunch, i) => {\n        //     return <CardGrid key={i}>\n\n        //     </CardGrid>\n        // })\n\n        let renderCards = this.props.works.map((work, i) => {\n            let horizontal = [0, 4, 8]\n            let small_vertical = [1, 2, 5, 6, 9, 10]\n            let big_vertical = [3, 7, 11]\n            let type: iTemplatesType = 'horizontal'\n            if (horizontal.indexOf(i) !== -1) type = 'horizontal'\n            if (big_vertical.indexOf(i) !== -1) type = 'big_vertical'\n            if (small_vertical.indexOf(i) !== -1) type = 'small_vertical'\n            return templates(type, work)\n        })\n\n        return <CardGrid>\n            {renderCards}\n        </CardGrid>\n    }\n}\n\n\n\n\n\nconst mapStateToProps = (state: any) => {\n    return {\n        works: state.app.works\n    }\n}\n\nexport default connect(mapStateToProps)(PortfolioComponent)","\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\nimport ThemeSelector from './components/SelectorTheme/ThemeSelector'\nimport UploadWorkComponent from './components/ThemeDetailsComponent/UploadWorkComponent'\nimport ProtfolioComponent from './components/ProtfolioComponent'\nimport { init } from './actions'\nimport { iUser, iRubric, iExercise } from './Api/interfaces';\nimport { Title, Text, Link } from './components/UI'\nimport '@vkontakte/vkui/dist/vkui.css'\nimport './index.css'\n\ninterface IProps {\n    type: 'web' | 'vk'\n    vk_id?: number\n    rubric_id?: string\n    init(type: 'web' | 'vk', vk_id?: number, rubric_id?: string): void\n    user: iUser\n    rubric: iRubric\n    activeExercise?: iExercise\n    auth?: boolean\n}\n\nconst Wrapper = styled.div`\n  padding: 10px 40px;\n  `\ninterface iExerciseWrapperProps {\n    active?: boolean\n}\n\nconst ExerciseWrapper = styled(Wrapper) <iExerciseWrapperProps>`\n  background: ${({ active }) => active ? '#FFEFE5' : '#E6EFFF'} ;\n  `\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;  \n  `\nconst Logo = styled.a`\n  color: #015EFF;\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 800;\n  font-size: 20px;\n  line-height: 24px;\n  text-decoration: none;\n  `\n\nconst RubricDescription = styled(Text)`\n  max-width: 500px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  `\n\nclass AppComponent extends React.Component<IProps, any> {\n    componentDidMount() {\n        this.props.init(this.props.type, this.props.vk_id, this.props.rubric_id)\n    }\n    render() {\n        let { user, rubric, activeExercise, auth } = this.props\n\n        if (!user) return <div>Загрука…</div>\n\n        const themesView = () => {\n            if (!rubric) return null\n            return !activeExercise ? < ThemeSelector /> : <UploadWorkComponent />\n        }\n\n\n        return <>\n            <ExerciseWrapper active={auth && activeExercise ? true : false}>\n                <Header>\n                    <Logo href=\"/\">Лин Портфолио</Logo>\n                    <div>{auth ? user.name : <Link>Войти</Link>}</div>\n                </Header>\n                <Text>Портфолио</Text>\n                <Title level=\"2\">{user.name}</Title>\n                <RubricDescription>{rubric ? rubric.desc : null}</RubricDescription>\n                {auth ? themesView() : null}\n            </ExerciseWrapper>\n            <ProtfolioComponent />\n        </>\n    }\n}\n\n\nconst mapStateToProps = (state: any) => {\n    return {\n        user: state.app.user,\n        rubric: state.app.rubric,\n        activeExercise: state.app.activeExercise,\n        auth: state.app.auth\n    }\n}\n\nexport default connect(mapStateToProps, { init })(AppComponent)\n","\nimport { combineReducers } from 'redux'\nimport UploadReducer from './components/ThemeDetailsComponent/reducer'\nimport ModalReducer from './components/Modal/reducer'\n\nfunction app(state: any = { isLoading: true, activeTab: 'upload', votes: {}, autoStars: false, works: [] }, action: any) {\n    switch (action.type) {\n        case 'APP_FETCHING_STARTED':\n            return { isLoading: true }\n        case 'APP_FETCHING_COMPLETED':\n            return { isLoading: false }\n        case 'APP/USER_FETCHED_SUCCESS':\n            return { ...state, user: action.user }\n        case 'APP/RUBRIC_FETCHED_SUCCESS':\n            return { ...state,rubric: action.rubric }\n        case 'APP/WORKS_FETCHED_SUCCESS':\n            return { ...state,works: action.works }\n        case 'APP/EXERCISE_STARTED':\n            return { ...state, activeExercise: action.exercise }\n        case 'APP/AUTH_SUCCESS':\n            return { ...state, auth: true }\n        case 'APP/EXERCISE_FINISHED':\n            return { ...state, activeExercise: null }\n        default:\n            return state\n    }\n}\n\nfunction themeSelector(state: any = { isLoading: true, themes: [] }, action: any) {\n    switch (action.type) {\n        case 'THEME_SELECTOR/LOADING_STARTED':\n            return { ...state, isLoading: true }\n        case 'THEME_SELECTOR/LOADING_FINISHED':\n            return { ...state, isLoading: false }\n        case 'THEME_SELECTOR/PREVIE_RENDER_SUCCESS':\n            return { ...state, cards: action.cards }\n        case 'THEME_SELECTOR/CARD_SELECTED_SUCCESS':\n            console.log(action)\n            return { ...state, activeCard: action.card }\n        case 'THEME_SELECTOR/EXERCISE_SELECTED_SUCCESS':\n            return { ...state, activeExercise: action.exercise }\n        case 'THEME_SELECTOR/OPEN_MODAL_SUCCESS':\n            return { ...state, showModal: true }\n        case 'THEME_SELECTOR/CLOSE_MODAL_SUCCESS':\n            return { ...state, showModal: false }\n        case 'THEME_SELECTOR/INIT_SUCCESS':\n            return { ...state, initialized: true }\n        default:\n            return state\n    }\n}\n\nconst allReducers = combineReducers({\n    app: app,\n    themeSelector,\n    upload: UploadReducer,\n    modal: ModalReducer\n});\n\nexport default allReducers","export default (state: any = { isLoading: false }, action: any) => {\n    switch (action.type) {\n        case 'UPLOAD/START_UPLOAD':\n            return { isLoading: true }\n        case 'UPLOAD/STOP_UPLOAD':\n            return { isLoading: false }\n        default:\n            return state\n    }\n}","import { isMobile } from \"react-device-detect\"\n\nexport default (state: any = { show: false }, action: any) => {\n    switch (action.type) {\n        case 'MODAL/CLOSE':\n            return { show: false }\n        case 'MODAL/OPEN':\n            return { show: true }\n        case 'THEME_SELECTOR/CARD_SELECTED_SUCCESS':\n            return { show: isMobile }\n        default:\n            return state\n    }\n}","\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers'\n\n// import registerServiceWorker from './sw';\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './App'\r\nimport { store } from './store';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <Router>\r\n      <Route exact={true} path=\"/\" render={() => <App type=\"web\" />} />\r\n      <Route exact={true} path=\"/vk/:rubric_id\" render={({ match }) => <App type=\"vk\" rubric_id={match.params.rubric_id} />} />\r\n      <Route exact={true} path=\"/:rubric_id/user/:vk_id\" render={({ match }) => <App type=\"web\" vk_id={match.params.vk_id} rubric_id={match.params.rubric_id}/>} />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/plus.9830cfc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/hot.db3a49aa.svg\";","module.exports = __webpack_public_path__ + \"static/media/cold.8b6fb32f.svg\";","module.exports = __webpack_public_path__ + \"static/media/wait.853a7169.svg\";","module.exports = __webpack_public_path__ + \"static/media/corner.525301c7.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.4af45f9a.svg\";"],"sourceRoot":""}